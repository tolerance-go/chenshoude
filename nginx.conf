server {
    listen 8002;
    client_max_body_size 20M;

    location /api {
        proxy_pass http://localhost:3000/api;

        proxy_set_header Host $host;
        # 设置转发到 Express.js 应用的请求头的 Host 字段值为原始请求的 Host 字段值

        proxy_set_header X-Real-IP $remote_addr;
        # 设置 X-Real-IP 请求头，其值为原始请求的远程 IP 地址

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # 设置 X-Forwarded-For 请求头，其值为原始请求的远程 IP 地址和代理服务器 IP 地址列表

        proxy_set_header X-Forwarded-Proto $scheme;
        # 设置 X-Forwarded-Proto 请求头，其值为原始请求的协议（通常是 "http" 或 "https"）

        proxy_set_header Authorization $http_authorization;
        # 设置 Authorization 请求头，其值为原始请求的 Authorization 头字段值。这使得原始请求的 Authorization 头可以被传递到 Express.js 应用

        proxy_pass_header Authorization;
        # 在响应返回给客户端时，将名为 Authorization 的响应头转发回客户端。这使得 Express.js 应用设置的 Authorization 响应头可以被返回到原始的客户端
    }

    location /uploads {
        proxy_pass http://localhost:3000/uploads;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /views {
        proxy_pass http://localhost:3000/views;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }


    location / {
        proxy_pass http://localhost:3006;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}